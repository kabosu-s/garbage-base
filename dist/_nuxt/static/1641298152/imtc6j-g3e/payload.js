__NUXT_JSONP__("/imtc6j-g3e", (function(a){return {data:[{id:"imtc6j-g3e",createdAt:"2021-08-13T08:39:19.567Z",updatedAt:a,publishedAt:"2021-08-13T08:56:10.309Z",revisedAt:a,title:"制作時メモ【viewsとcomponentsフォルダへの区分けについて】",mainimage:{url:"https:\u002F\u002Fimages.microcms-assets.io\u002Fassets\u002F30dedbc29bbf472a8bd932f7df5e77d6\u002Feeac577d4a4541458a68d4fa8714c847\u002Fvue_back.jpg",height:600,width:1200},body:"\u003Chtml\u003E\u003Chead\u003E\u003C\u002Fhead\u003E\u003Cbody\u003E\u003Cp\u003Eフロント側のviewsとcomponents周りを整える\u003Cbr\u003E両方のフォルダに.vueファイルがあるので、何をどっちに作るべきなのか迷った。\u003Cbr\u003E\u003C\u002Fp\u003E\u003Ch2 id=\"h405ef6b021\"\u003E区分けルール\u003C\u002Fh2\u003E\u003Ch3 id=\"h628b44aa83\"\u003Eviewsフォルダはルーティングに登録されるもの\u003C\u002Fh3\u003E\u003Cp\u003Eviewsフォルダに置かれているコンポーネントは、\u003Cbr\u003Eルーティングを構成する\u003Ccode\u003Esrc\u002Frouter\u002Findex.js\u003C\u002Fcode\u003Eにimportされるコンポーネントとする。\u003Cbr\u003E\u003C\u002Fp\u003E\u003Ch3 id=\"h2510727db6\"\u003Ecomponentsフォルダは再利用可能で、ページを構成する部品\u003C\u002Fh3\u003E\u003Cp\u003Ecomponentsフォルダのコンポーネントはルートとして使用されないので、\u003Cbr\u003E再利用可能な部品として扱かえるものをおく。\u003Cbr\u003E\u003Cbr\u003Eといわけで。さっそく\u003Cbr\u003E\u003C\u002Fp\u003E\u003Ch2 id=\"h9195544db1\"\u003Eヘッダーフッターをcomponentsに作り読み込んでみる\u003C\u002Fh2\u003E\u003Cp\u003E\u003Cbr\u003Eファイルの構成はこんな感じ\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E└── src\n    ├── \u003Cspan class=\"hljs-module-access\"\u003E\u003Cspan class=\"hljs-module\"\u003E\u003Cspan class=\"hljs-identifier\"\u003EApp\u003C\u002Fspan\u003E.\u003C\u002Fspan\u003E\u003C\u002Fspan\u003Evue\n    ├── assets\n    │   └── logo.png\n    ├── components\n    │   └── \u003Cspan class=\"hljs-module-access\"\u003E\u003Cspan class=\"hljs-module\"\u003E\u003Cspan class=\"hljs-identifier\"\u003EFooter\u003C\u002Fspan\u003E.\u003C\u002Fspan\u003E\u003C\u002Fspan\u003Evue\n    │   └── \u003Cspan class=\"hljs-module-access\"\u003E\u003Cspan class=\"hljs-module\"\u003E\u003Cspan class=\"hljs-identifier\"\u003EHeader\u003C\u002Fspan\u003E.\u003C\u002Fspan\u003E\u003C\u002Fspan\u003Evue\n    ├── main.js\n    ├── routersr\n    │   └── index.js\n    └── views\n        ├── \u003Cspan class=\"hljs-module-access\"\u003E\u003Cspan class=\"hljs-module\"\u003E\u003Cspan class=\"hljs-identifier\"\u003EAbout\u003C\u002Fspan\u003E.\u003C\u002Fspan\u003E\u003C\u002Fspan\u003Evue\n        └── \u003Cspan class=\"hljs-module-access\"\u003E\u003Cspan class=\"hljs-module\"\u003E\u003Cspan class=\"hljs-identifier\"\u003EHome\u003C\u002Fspan\u003E.\u003C\u002Fspan\u003E\u003C\u002Fspan\u003Evue\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cbr\u003E\u003Cbr\u003EApp.vueにHeaderとFooterと\u003Cs\u003Eルート時の中身（Home）\u003C\u002Fs\u003Eをインポートする。\u003Cbr\u003E中身はRouterで制御するので、\u003Cspan style=\"color:#33cc33\"\u003Erouter-view\u003C\u002Fspan\u003Eを読み込むことにする。（cliで作ったときからそうだったのでそれを活かします。）\u003Cbr\u003E\u003Cbr\u003EHeader.vueとFooter.vueをApp.vueにインポートして、コンポーネントとして登録する。\u003Cbr\u003E\u003Cbr\u003E\u002Fsrc\u002FApp.vue\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-tag\"\u003E&lt;\u003Cspan class=\"hljs-name\"\u003Escript\u003C\u002Fspan\u003E&gt;\u003C\u002Fspan\u003E\u003Cspan class=\"javascript\"\u003E\n\u003Cspan class=\"hljs-comment\"\u003E\u002F\u002Fインポート   @ is an alias to \u002Fsrc（@は\u002Fsrt\u002Fのエイリアス）だそうです。←書いてあった。\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Header \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"@\u002Fcomponents\u002FHeader.vue\"\u003C\u002Fspan\u003E;\n\u003Cspan class=\"hljs-keyword\"\u003Eimport\u003C\u002Fspan\u003E Footer \u003Cspan class=\"hljs-keyword\"\u003Efrom\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"@\u002Fcomponents\u002FFooter.vue\"\u003C\u002Fspan\u003E;\n\n\u003Cspan class=\"hljs-keyword\"\u003Eexport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-keyword\"\u003Edefault\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-attr\"\u003Ecomponents\u003C\u002Fspan\u003E: { \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002Fここで読み込んだファイルを設定する\u003C\u002Fspan\u003E\n        Header,\n        Footer,\n    }\n}\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cbr\u003E↑で設定したので、テンプレート側ではこんなかんじで呼び出せる。\u003Cbr\u003E\u003Cbr\u003E\u002Fsrc\u002FApp.vue\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-params\"\u003E&lt;template&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-params\"\u003E&lt;Header \u002F&gt;\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-params\"\u003E&lt;router-view \u002F&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002Fはじめから書いてあった。Routerを呼び出してるぽい\u003C\u002Fspan\u003E\n    \u003Cspan class=\"hljs-params\"\u003E&lt;Footer \u002F&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-params\"\u003E&lt;\u002Ftemplate&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cbr\u003EHeader.vueやFooter.vueの中身はwpやcakeで作るときとおんなじ感じでコーディングする。\u003Cbr\u003E例えばこんな感じ。\u003Cbr\u003E\u003Cbr\u003E\u002Fsrc\u002Fcomponents\u002FFooter.vue\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-params\"\u003E&lt;template&gt;\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-params\"\u003E&lt;footer&gt;\u003C\u002Fspan\u003E© Garbage Base.\u003Cspan class=\"hljs-params\"\u003E&lt;\u002Ffooter&gt;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-params\"\u003E&lt;\u002Ftemplate&gt;\u003C\u002Fspan\u003E\n\n\u003Cspan class=\"hljs-params\"\u003E&lt;style lang=\"scss\" scoped&gt;\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002Fscss形式でかける。scopedと↑のテンプレートだけにスタイルが当たる。\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-class\"\u003Efooter \u003C\u002Fspan\u003E{\n\u003Cspan class=\"hljs-symbol\"\u003E    width:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-number\"\u003E100\u003C\u002Fspan\u003E%;\n    text-align: center;\n    font-size: \u003Cspan class=\"hljs-number\"\u003E0.9\u003C\u002Fspan\u003Erem;\n\u003Cspan class=\"hljs-symbol\"\u003E    color:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-meta\"\u003E#222;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-symbol\"\u003E    margin:\u003C\u002Fspan\u003E auto;\n    border-top: \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003Epx solid \u003Cspan class=\"hljs-meta\"\u003E#444;\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-symbol\"\u003E    padding:\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-number\"\u003E10\u003C\u002Fspan\u003Epx \u003Cspan class=\"hljs-number\"\u003E1\u003C\u002Fspan\u003E%;\n}\n\u003Cspan class=\"hljs-params\"\u003E&lt;\u002Fstyle&gt;\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cbr\u003Eつづきます\u003C\u002Fp\u003E\u003C\u002Fbody\u003E\u003C\u002Fhtml\u003E",tag:["WEB"]}],fetch:{},mutations:void 0}}("2021-08-18T11:34:24.184Z")));