__NUXT_JSONP__("/geexdeal-4f2", (function(a,b){return {data:[{id:"geexdeal-4f2",createdAt:a,updatedAt:b,publishedAt:a,revisedAt:b,title:"制作時メモ【Vue-Cliではじめてのvue create！ 】",mainimage:{url:"https:\u002F\u002Fimages.microcms-assets.io\u002Fassets\u002F30dedbc29bbf472a8bd932f7df5e77d6\u002Feeac577d4a4541458a68d4fa8714c847\u002Fvue_back.jpg",height:600,width:1200},body:"\u003Chtml\u003E\u003Chead\u003E\u003C\u002Fhead\u003E\u003Cbody\u003E\u003Cp\u003E\u003Cspan style=\"color:#2c3e50\"\u003EVue-CliとHeadlessCMSの勉強を兼ねて何かを作ってみます。\u003C\u002Fspan\u003E\u003Cbr\u003E\u003Cspan style=\"color:#2c3e50\"\u003E…とりあえずは、うごくものを作ることが目的で、記事の内容を人様に読ませるつもりがなく、\u003C\u002Fspan\u003E\u003Cbr\u003E\u003Cspan style=\"color:#2c3e50\"\u003Eひどいです。飛ばし飛ばし書いてるので参考になりません。すみません。\u003C\u002Fspan\u003E\u003Cbr\u003E\u003Cbr\u003E\u003Cbr\u003E色々バージョンとか試してみた結果、Vue.js 3.0 でやることにした。\u003Cbr\u003Evuetifyは3系のものは開発版で現時点で全然要素が揃ってないので利用は諦めることに。\u003Cbr\u003Eというわけで…\u003Cbr\u003E\u003C\u002Fp\u003E\u003Ch2 id=\"h482e4025fb\"\u003E最初のプロジェクト制作\u003C\u002Fh2\u003E\u003Cp\u003E\u003Cbr\u003Eターミナルでプロジェクトを作りたい場所に移動して\u003Ccode\u003Evue create プロジェクト名\u003C\u002Fcode\u003Eを入力\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003Evue create garbage-\u003Cspan class=\"hljs-keyword\"\u003Ebase\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cbr\u003Eカスタマイズ（Manually select features&nbsp;）を選択、内容はこんな感じにしました。\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E? Please pick a preset: Manually \u003Cspan class=\"hljs-keyword\"\u003Eselect\u003C\u002Fspan\u003E features\n? \u003Cspan class=\"hljs-keyword\"\u003ECheck\u003C\u002Fspan\u003E the features needed \u003Cspan class=\"hljs-keyword\"\u003Efor\u003C\u002Fspan\u003E your \u003Cspan class=\"hljs-keyword\"\u003Eproject\u003C\u002Fspan\u003E:&nbsp;\n&nbsp;◉ \u003Cspan class=\"hljs-keyword\"\u003EChoose\u003C\u002Fspan\u003E Vue \u003Cspan class=\"hljs-keyword\"\u003Eversion\u003C\u002Fspan\u003E\n&nbsp;◉ Babel\n&nbsp;◯ TypeScript\n&nbsp;◯ Progressive Web App (PWA) Support\n&nbsp;◉ Router\n&nbsp;◯ Vuex\n❯◉ CSS Pre-processors\n&nbsp;◉ Linter \u002F Formatter\n&nbsp;◯ Unit Testing\n&nbsp;◯ E2E Testing\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cbr\u003E各設定の質問にこたえます。\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E? Please pick a preset: Manually select features\n? Check the features needed \u003Cspan class=\"hljs-keyword\"\u003Efor\u003C\u002Fspan\u003E your project: Choose Vue version, Babel, Router, CSS Pre-processors, Linter\n? Choose a version of Vue.js that you want \u003Cspan class=\"hljs-keyword\"\u003Eto\u003C\u002Fspan\u003E start the project with 3.x (Preview)\n? Use history mode \u003Cspan class=\"hljs-keyword\"\u003Efor\u003C\u002Fspan\u003E router? (Requires proper\u003Cspan class=\"hljs-built_in\"\u003E server \u003C\u002Fspan\u003Esetup \u003Cspan class=\"hljs-keyword\"\u003Efor\u003C\u002Fspan\u003E index fallback \u003Cspan class=\"hljs-keyword\"\u003Ein\u003C\u002Fspan\u003E production) \u003Cspan class=\"hljs-literal\"\u003EYes\u003C\u002Fspan\u003E\n? Pick a CSS pre-processor (PostCSS, Autoprefixer \u003Cspan class=\"hljs-keyword\"\u003Eand\u003C\u002Fspan\u003E CSS Modules are supported by default): Sass\u002FSCSS (with dart-sass)\n? Pick a linter \u002F formatter config: Basic\n? Pick additional lint features: Lint on save\n? Where \u003Cspan class=\"hljs-keyword\"\u003Edo\u003C\u002Fspan\u003E you prefer placing\u003Cspan class=\"hljs-built_in\"\u003E config \u003C\u002Fspan\u003E\u003Cspan class=\"hljs-keyword\"\u003Efor\u003C\u002Fspan\u003E Babel, ESLint, etc.? \u003Cspan class=\"hljs-keyword\"\u003EIn\u003C\u002Fspan\u003E dedicated\u003Cspan class=\"hljs-built_in\"\u003E config \u003C\u002Fspan\u003Efiles\n? Save this as a preset \u003Cspan class=\"hljs-keyword\"\u003Efor\u003C\u002Fspan\u003E future projects? (y\u002FN)&nbsp;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cbr\u003Eプロジェクトができたので立ち上げてみます。\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-meta\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003E \u003Cspan class=\"hljs-built_in\"\u003Ecd\u003C\u002Fspan\u003E garbage-base\u002F\u003C\u002Fspan\u003E\n\u003Cspan class=\"hljs-meta\"\u003E$\u003C\u002Fspan\u003E\u003Cspan class=\"bash\"\u003E npm run serve\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cbr\u003E立ち上がりました。\u003Cbr\u003E\u003Cimg src=\"https:\u002F\u002Fimages.microcms-assets.io\u002Fassets\u002F30dedbc29bbf472a8bd932f7df5e77d6\u002F211578e2261642c286f807132bfa7171\u002Fimg.png?w=800&amp;h=1066\" alt=\"\"\u003E\u003Cbr\u003Eつづきます\u003C\u002Fp\u003E\u003C\u002Fbody\u003E\u003C\u002Fhtml\u003E",tag:["WEB"]}],fetch:{},mutations:void 0}}("2021-07-19T15:40:21.718Z","2021-08-18T11:28:57.155Z")));