__NUXT_JSONP__("/zsob6xf4uii", (function(a){return {data:[{id:"zsob6xf4uii",createdAt:"2021-08-08T06:21:05.510Z",updatedAt:a,publishedAt:"2021-08-08T09:41:40.625Z",revisedAt:a,title:"制作時メモ【sassの設定】",mainimage:{url:"https:\u002F\u002Fimages.microcms-assets.io\u002Fassets\u002F30dedbc29bbf472a8bd932f7df5e77d6\u002Feeac577d4a4541458a68d4fa8714c847\u002Fvue_back.jpg",height:600,width:1200},body:"\u003Chtml\u003E\u003Chead\u003E\u003C\u002Fhead\u003E\u003Cbody\u003E\u003Cp\u003Eプロジェクトができたので…色々すすめます。\u003Cbr\u003E\u003C\u002Fp\u003E\u003Ch2 id=\"hcac6f97b18\"\u003E設定用のsassをグローバルで読み込む\u003C\u002Fh2\u003E\u003Cp\u003Eとりあえず…sassのセッティングとかmixinとか全体で使えるようにしたい。\u003Cbr\u003Esass-loaderをインストール\u003Cbr\u003E\u003Cbr\u003Eターミナルのプロジェクトルート直下に移動して\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E$ npm install --save-dev \u003Cspan class=\"hljs-keyword\"\u003Enode\u003C\u002Fspan\u003E\u003Cspan class=\"hljs-title\"\u003E-sass\u003C\u002Fspan\u003E sass-loader\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cbr\u003Evue.config.jsをプロジェクトルート直下に作ってグローバルで読み込めば設定した変数とかmixinをそれぞれのファイルから呼び出せるようになる\u003Cbr\u003E\u003Cbr\u003Evue.config.js\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E\u003Cspan class=\"hljs-function\"\u003E\u003Cspan class=\"hljs-keyword\"\u003Emodule\u003C\u002Fspan\u003E.\u003Cspan class=\"hljs-title\"\u003Eexports\u003C\u002Fspan\u003E =\u003C\u002Fspan\u003E {\n  css: {\n    loaderOptions: {\n      scss: {\n        prependData: '@\u003Cspan class=\"hljs-built_in\"\u003Eimport\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-string\"\u003E\"@\u002Fassets\u002Fsass\u002Fprepends.scss\"\u003C\u002Fspan\u003E;'\n      }\n    }\n  }\n};\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003E\u003Cbr\u003Emixinが使える！\u003Cbr\u003E\u003Cbr\u003E\u002Fsrc\u002Fcomponents\u002FHeader.vue\u003C\u002Fp\u003E\u003Cpre\u003E\u003Ccode class=\"hljs\"\u003E&lt;style lang=\u003Cspan class=\"hljs-string\"\u003E\"scss\"\u003C\u002Fspan\u003E scoped&gt;\n\u003Cspan class=\"hljs-selector-tag\"\u003Eheader\u003C\u002Fspan\u003E {\n    \u003Cspan class=\"hljs-attribute\"\u003Eborder-bottom\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E1px\u003C\u002Fspan\u003E dashed \u003Cspan class=\"hljs-number\"\u003E#666666\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-attribute\"\u003Edisplay\u003C\u002Fspan\u003E: flex;\n    \u003Cspan class=\"hljs-attribute\"\u003Eflex-flow\u003C\u002Fspan\u003E: row nowrap;\n    \u003Cspan class=\"hljs-attribute\"\u003Eheight\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E100px\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-attribute\"\u003Ejustify-content\u003C\u002Fspan\u003E: space-between;\n    \u003Cspan class=\"hljs-attribute\"\u003Epadding\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E10px\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-number\"\u003E1%\u003C\u002Fspan\u003E;\n    \u003Cspan class=\"hljs-attribute\"\u003Eposition\u003C\u002Fspan\u003E: relative;\n    \u003Cspan class=\"hljs-attribute\"\u003Ewidth\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E100%\u003C\u002Fspan\u003E;\n    @include mq767 { \u003Cspan class=\"hljs-comment\"\u003E\u002F\u002Fメディアクエリのmixin\u003C\u002Fspan\u003E\n        \u003Cspan class=\"hljs-attribute\"\u003Eheight\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E60px\u003C\u002Fspan\u003E;\n        \u003Cspan class=\"hljs-attribute\"\u003Epadding\u003C\u002Fspan\u003E: \u003Cspan class=\"hljs-number\"\u003E0\u003C\u002Fspan\u003E \u003Cspan class=\"hljs-number\"\u003E1%\u003C\u002Fspan\u003E;\n    }\n}\n&lt;\u002Fstyle&gt;\u003C\u002Fcode\u003E\u003C\u002Fpre\u003E\u003Cp\u003Eつづきます\u003C\u002Fp\u003E\u003C\u002Fbody\u003E\u003C\u002Fhtml\u003E",tag:["WEB"]}],fetch:{},mutations:void 0}}("2021-08-18T11:35:49.924Z")));